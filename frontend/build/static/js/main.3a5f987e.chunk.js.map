{"version":3,"sources":["components/Header/Header.js","components/Encart/EncartBlanc.js","components/Footer/Footer.js","components/Objects/blackWindow.js","components/Objects/blackWindow2.js","components/Objects/ContactForm2.js","components/Objects/ContactBooking.js","pages/Contact.js","pages/Accueil.js","pages/GalleryPhoto.js","context/auth-context.js","pages/Auth.js","components/Spinner/Spinner.js","helpers/date.js","components/Events/EventList/EncartEvent/EncartEventLs.js","components/Events/EventList/EventListLs.js","pages/Events.js","components/Modal/Modal.js","components/Events/EventList/EncartEvent/EncartEvent.js","components/Events/EventList/EventList.js","pages/Event.js","components/Navigation/MainNavigation.js","components/Contact/EncartContact.js","components/Contact/ContactList.js","pages/Contacts.js","components/Youtube/EncartYoutube/EncartYoutube.js","components/Youtube/YoutubeList.js","pages/CreationYoutubeLink.js","components/Youtube/EncartYoutube/EncartYoutubeLs.js","components/Youtube/YoutubeListLs.js","pages/DisplayYoutubeLink.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","id","href","src","alt","Link","exact","to","target","rel","React","Component","EncartBlanc","_ref","text1","text2","size","Footer","BlackWindow","BlackWindow2","moment","require","ContactForm2","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sendMessage","event","setState","creating","nom","state","NameOfMessage","mail","EmailOfMessage","message","Message","date","format","messageLog","console","log","requestBody","query","concat","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","status","Error","json","catch","err","value","PhoneOfMessage","handleNameOfMessage","bind","assertThisInitialized","handleEmailOfMessage","handlePhoneOfMessage","handleMessage","SignatureOfGuest","type","onChange","placeholder","tabIndex","required","autoFocus","onClick","ContactBooking","Contact","Encart_EncartBlanc","Objects_ContactForm2","Objects_ContactBooking","blackWindow","blackWindow2","components_Footer_Footer","divStyle","position","bottom","width","left","divStyle2","divStyle3","Accueil","style","GalleryPhoto","currentImage","closeLightbox","openLightbox","gotoNext","gotoPrevious","obj","index","lightboxIsOpen","photos","height","react_photo_gallery_esm","direction","columns","Lightbox_default","images","onClose","onClickPrev","onClickNext","isOpen","createContext","token","userId","login","tokenExpiration","logout","AuthPage","isLogin","switchModeHandler","prevState","submitHandler","preventDefault","email","emailEl","current","password","passwordEl","trim","resData","data","context","createRef","onSubmit","htmlFor","ref","contextType","AuthContext","spinner","helpers","monthToString","Date","getMonth","sortDate","array","sort","b","EncartEventLs","getDate","getFullYear","nomBar","nomEvenement","lienFb","eventId","eventListLs","pastEvent","events","filter","isBefore","endOf","valueOf","map","EncartEvent_EncartEventLs","barName","eventName","fbLink","key","_id","futurEvent","isAfter","Events","isLoading","selectedEvent","fetchEvents","onDeleteEvent","Authorization","updatedEvents","table","barNameElRef","eventNameElRef","dateElRef","fbLinkElRef","Spinner_Spinner","EventListLs","authUserId","modal","title","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","EncartEvent","deleteThisEvent","eventList","EventList_EncartEvent_EncartEvent","EventPage","startCreateEventHandler","modalConfirmHandler","length","toConsumableArray","push","createEvent","modalCancelHandler","Fragment","Modal_Modal","EventList_EventList","mainNavigation","auth_context","Consumer","NavLink","EncartContact","phoneContact","onDeleteContact","contactMessageId","ContactList","contacts","contactMessage","Contact_EncartContact","Contacts","contactsMessages","fetchContacts","deleteContact","messageId","updatedMessages","contactsMessage","Contact_ContactList","EncartYoutube","link","deleteThisLink","youtubeLinkId","YoutubeList","youtubeLinks","youtubeLink","Youtube_EncartYoutube_EncartYoutube","onDeleteYoutubeLink","YoutubeLinkPage","selectedYoutubeLink","startCreateYoutubeLinkHandler","linkElRef","updatedYoutubeLink","createYoutubeLink","fetchYoutubeLinks","updatedYoutubeLinks","Youtube_YoutubeList","EncartYoutubeLs","YouTube","videoId","EncartYoutube_EncartYoutubeLs","DisplayYoutubeLink","YoutubeListLs","App","BrowserRouter","Provider","Navigation_MainNavigation","Header_Header","Switch","Route","path","component","Redirect","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a5f987e.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header-area\">\n        {/* <!-- Navbar Area --> */}\n        <div className=\"oneMusic-main-menu\">\n          <div className=\"classy-nav-container breakpoint-off\">\n            <div className=\"container\">\n              {/* <!-- Menu --> */}\n              <nav className=\"classy-navbar justify-content-between\" id=\"oneMusicNav\">\n\n                {/* <!-- Nav brand --> */}\n                <a href=\"\" className=\"nav-brand\"><img src=\"img/core-img/logobaronpetit3.png\" alt=\"\" /></a>\n\n                {/* <!-- Navbar Toggler --> */}\n                <div className=\"classy-navbar-toggler\">\n                  <span className=\"navbarToggler\">\n                    <span />\n                    <span />\n                    <span />\n                  </span>\n                </div>\n\n                {/* <!-- Menu --> */}\n                <div className=\"classy-menu\">\n\n                  {/* <!-- Close Button --> */}\n                  <div className=\"classycloseIcon\">\n                    <div className=\"cross-wrap\">\n                <span className=\"top\" />\n                <span className=\"bottom\" />\n              </div>\n                  </div>\n\n                  {/* <!-- Nav Start --> */}\n                  <div className=\"classynav align-items-center\">\n                    <ul>\n                <li><Link exact to=\"/react-baron\">HOME</Link></li>\n                <li><Link to=\"/Mp3\">VIDEOS</Link></li>\n\n                <li><Link to=\"/GalleryPhoto\">PHOTOS</Link></li>\n                <li><Link to=\"/Events\">TOUR</Link></li>\n                <li><Link to=\"/Contact\">CONTACT</Link></li>\n                <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://baroncrane.bigcartel.com/\" className=\"btn see-more-btn\">SHOP</a></li>\n                <li><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://baroncrane.bandcamp.com/\" className=\"btn see-more-btn\">MUSIC</a></li>\n\n              </ul>\n\n                  </div>\n                  {/* <!-- Nav End --> */}\n\n                </div>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n","\n import React from 'react'\n import '../CSS/encart.css'\n\n const EncartBlanc = ({text1,text2, size}) => (\n    <section className={size === 1 ? \"breadcumb-area\": \"whitePage\"}  >\n        <div className=\"bradcumbContent \">\n            <p>{text1}</p>\n            <h2>{text2}</h2>\n        </div>\n    </section>\n)\n \nexport default EncartBlanc\n ","\n\nimport React from 'react';\n\n\nconst Footer = () => (\n\n\n  <footer className=\"page-footer font-small black darken-2\">\n\n    <div className=\"container\">\n\n      <div className=\"row\">\n\n        <div className=\"col-md-12 py-0\">\n          <div className=\"mb-5 flex-center\">\n\n            <a className=\"fb-ic\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/baroncrane/\">\n              <i className=\"fab fa-facebook-f fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i>\n            </a>\n            <a className=\"ins-ic\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/baron.crane/\">\n              <i className=\"fab fa-instagram fa-lg white-text mr-md-5 mr-3 fa-2x\"> </i>\n            </a>\n\n            <a className=\"you-ic\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.youtube.com/baroncrane\">\n              <i className=\"fab fa-youtube fa-lg white-text fa-2x\">  </i>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"footer-copyright text-center py-3\">\n© 2018 Copyright:\n      <a href=\"https:/github.com/worms19\"> Worms19</a>\n    </div>\n\n  </footer>\n\n\n);\n\nexport default Footer;\n","import React from 'react';\n\nconst BlackWindow = () => (\n\n\n    <div className=\"col-12 col-md-6 col-lg-6\">\n        <div className=\"single-event-area mb-5\">\n            <div className=\"event-text\">\n                <h4>ENGLISH VERSION </h4>\n                <div className=\"event-meta-data\">\n                    <a href=\"#\" className=\"event-place\">Bio</a>\n                    <a href=\"#\" className=\"event-date\">Reviews</a>\n                </div>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"dummy/press-kit-baron-crane.pdf\" className=\"btn see-more-btn\">Download</a>\n\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default BlackWindow;\n","import React from 'react';\n\nconst BlackWindow2 = () => (\n\n\n\n    <div className=\"col-12 col-md-6 col-lg-6\">\n        <div className=\"single-event-area mb-5\">\n\n            <div className=\"event-text\">\n                <h4>VERSION FRANCAISE </h4>\n                <div className=\"event-meta-data\">\n                    <a href=\"#\" className=\"event-place\">Bio</a>\n                    <a href=\"#\" className=\"event-date\">Presse</a>\n                </div>\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"dummy/dossier-presse-baron-crane.pdf\" className=\"btn see-more-btn\">Télécharger</a>\n\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default BlackWindow2;\n","import React, {Component} from 'react';\nimport './contact.css'\nconst moment = require('moment');\n\nclass ContactForm2 extends Component{\n\n    constructor(props) {\n        super(props);\n        this.handleNameOfMessage = this.handleNameOfMessage.bind(this);\n        this.handleEmailOfMessage = this.handleEmailOfMessage.bind(this);\n        this.handlePhoneOfMessage = this.handlePhoneOfMessage.bind(this);\n        this.handleMessage = this.handleMessage.bind(this);\n\n        this.state = {\n            SignatureOfGuest: \"\",\n            EmailOfMessage: \"\",\n            PhoneOfMessage: \"\",\n            NameOfMessage: \"\",\n            Message: \"\",\n        };\n    }\n\n\n    handleNameOfMessage(event) {\n        this.setState({ NameOfMessage: event.target.value });\n        console.log('damdam', event.target.value);\n    }\n    handleEmailOfMessage(event) {\n        this.setState({EmailOfMessage: event.target.value });\n        console.log('damdam', event.target.value);\n    }\n    handlePhoneOfMessage(event) {\n        this.setState({ PhoneOfMessage: event.target.value });\n        console.log('damdam', event.target.value);\n    }\n    handleMessage(event) {\n        this.setState({ Message: event.target.value });\n    }\n\n    /*sendMessage = event => {\n        event.preventDefault();\n        this.setState({\n            NameOfMessage: event.target.value,\n            EmailOfMessage: event.target.value,\n            PhoneOfMessage: event.target.value,\n            Message: event.target.value\n        });\n        console.log('damdam', this.state.NameOfMessage, this.state.EmailOfMessage, this.state.PhoneOfMessage, this.state.Message);\n    }*/\n\n    sendMessage = (event) =>{\n        this.setState({creating:false});\n        const nom = this.state.NameOfMessage;\n        const mail = this.state.EmailOfMessage;\n        const message = this.state.Message;\n        const date = moment().format(\"MMM Do YY\");\n\n\n        const messageLog = {nom, mail, message, date};\n        console.log(messageLog);\n\n        const requestBody = {\n            query: `\n                mutation {\n                    createContactMessage(contactInput:{ nom: \"${nom}\", mail: \"${mail}\", message: \"${message}\",date: \"${date}\"})\n                    {\n                        _id\n                    }\n                }\n            `\n        };\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .catch(err =>{\n                console.log(err)\n            });\n\n        this.setState({\n            NameOfMessage: event.target.value,\n            EmailOfMessage: event.target.value,\n            PhoneOfMessage: event.target.value,\n            Message: event.target.value\n        });\n    };\n\n\n\n    render(){\n\n        return(\n            <div className=\"container\">\n                <form id=\"contact\" >\n                    <h3>Quick Contact</h3>\n                    <h4>Contact us today, and get reply with in 24 hours!</h4>\n                    <fieldset>\n                        <input\n                            type=\"text\"\n                            onChange={this.handleNameOfMessage}\n                            className=\"NameinputForm\"\n                            value={this.state.NameOfMessage}\n                            placeholder=\"Your name\"\n                            tabIndex=\"1\"\n                            required\n                            autoFocus\n                        />\n                    </fieldset>\n                    <fieldset>\n                        <input\n                            type=\"email\"\n                            onChange={this.handleEmailOfMessage}\n                            className=\"NameinputForm\"\n                            value={this.state.EmailOfMessage}\n                            placeholder=\"Your Email Address\"\n                            tabIndex=\"2\"\n                            required\n                        />\n                    </fieldset>\n                    <fieldset>\n                        <input\n                            type=\"text\"\n                            onChange={this.handlePhoneOfMessage}\n                            className=\"NameinputForm\"\n                            value={this.state.PhoneOfMessage}\n                            placeholder=\"Your name\"\n                            tabIndex=\"3\"\n                            required\n                        />\n                    </fieldset>\n                    <fieldset>\n                        <textarea\n                            onChange={this.handleMessage}\n                            placeholder=\"Type your Message Here....\"\n                            value={this.state.Message}\n                            tabIndex=\"5\"\n                            required\n                            autoFocus\n                        />\n                    </fieldset>\n                    <fieldset>\n\n                    <button\n                        className=\"submit\"\n                        type=\"submit\"\n                        onClick={this.sendMessage}\n                    >\n                        Submit</button>\n                    </fieldset>\n\n                </form>\n\n\n            </div>\n        );\n    }\n}\n\nexport default  ContactForm2;","import React from 'react';\n\nconst ContactBooking= () => (\n    <div className=\"ContactLarge\">\n        <div className=\"col-12 \">\n            <div className=\"single-event-area mb-5\">\n                <div className=\"event-text\">\n                    <h4>BOOKING : Juliette Rambaud </h4>\n                    <div className=\"event-meta-data\">\n                        <a href=\"#\" className=\"event-place\">booking.baroncrane@gmail.com  </a>\n                        <a href=\"#\" className=\"event-date\">0683736281</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default ContactBooking;\n"," import React from 'react'\n import EncartBlanc from '../components/Encart/EncartBlanc';\n import Footer from \"../components/Footer/Footer\";\n import BlackWindow from \"../components/Objects/blackWindow\";\n import BlackWindow2 from \"../components/Objects/blackWindow2\";\n import ContactForm2 from \"../components/Objects/ContactForm2\";\n import ContactBooking from \"../components/Objects/ContactBooking\";\n\n const Contact = () => (\n\n \t\t\t<div>\n\t\t\t\t\t<div className=\"container \">\n\t\t\t\t\t\t\t<EncartBlanc\n\t\t\t\t\t\t\t\ttext1 = {'See What NeWs'}\n\t\t\t\t\t\t\t\ttext2 = {'Get in touch'}\n\t\t\t\t\t\t\t\tsize = {1}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ContactForm2/>\n\t\t\t\t\t\t\t<ContactBooking/>\n\t\t\t\t\t\t\t<section className=\"breadcumb-area2\"  >\n\t\t\t\t\t\t\t\t<div className=\"bradcumbContent \">\n\t\t\t\t\t\t\t\t\t<h2>PressKit</h2>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<BlackWindow/>\n\t\t\t\t\t\t<BlackWindow2/>\n\t\t\t\t\t</div>\n\t\t\t\t<Footer/>\n \t\t\t</div>\n             )\n \n export default Contact\n  ","import React from 'react';\n\nconst divStyle = {\n  position: 'absolute',\n  bottom: '30px',\n  width: '50%',\n  left: '40px',\n};\nconst divStyle2 = {\n  position: 'absolute',\n  bottom: '30px',\n  width: '40%',\n  left: '70px',\n};\nconst divStyle3 = {\n  position: 'absolute',\n  bottom: '30px',\n  left: '110px',\n};\n\nconst Accueil = () => (\n  <div className=\"\">\n    <a className=\"fac-ic\" style={divStyle} target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/baroncrane/\">\n      <i className=\"fab fa-facebook-f fa-lg white-text fa-2x\"> </i>\n    </a>\n    <a className=\"ins-ic\" style={divStyle2} target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/baron.crane/\">\n      <i className=\"fab fa-instagram fa-lg white-text fa-2x\"> </i>\n    </a>\n    <a className=\"pin-ic\" style={divStyle3} target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.youtube.com/baroncrane\">\n      <i className=\"fab fa-youtube fa-lg white-text fa-2x\"> </i>\n    </a>\n  </div>\n);\n\nexport default Accueil;","import React from 'react';\nimport Gallery from 'react-photo-gallery';\nimport Lightbox from 'react-images';\nimport EncartBlanc from '../components/Encart/EncartBlanc';\nimport Footer from '../components/Footer/Footer';\n\nexport default class GalleryPhoto extends React.Component {\n  constructor() {\n    super();\n    this.state = { currentImage: 0 };\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n  }\n\n  openLightbox(event, obj) {\n    this.setState({\n      currentImage: obj.index,\n      lightboxIsOpen: true,\n    });\n  }\n\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false,\n    });\n  }\n\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1,\n    });\n  }\n\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1,\n    });\n  }\n\n\n  render() {\n    const photos = [\n      /* { src: 'react-baron/dummy/11.jpg', width: 3, height: 2 },\n          { src: 'react-baron/dummy/12.jpg', width: 3, height: 2 },\n          { src: 'react-baron/dummy/4.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/5.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/6.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/7.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/8.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/9.jpg',   width: 3, height: 2 },\n\n          { src: 'react-baron/dummy/8.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/9.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/8.jpg',   width: 3, height: 2 },\n          { src: 'react-baron/dummy/9.jpg',   width: 3, height: 2 },\n\n          { src: 'react-baron/dummy/10.jpg', width: 3, height: 2 } */\n      { src: '/dummy/large-gallery/13.jpg', width: 3, height: 2 },\n      { src: '/dummy/large-gallery/14.jpg', width: 3, height: 2 },\n      { src: '/dummy/large-gallery/15.jpg', width: 3, height: 2 },\n      { src: '/dummy/large-gallery/16.jpg', width: 3, height: 2 },\n      { src: '/dummy/large-gallery/17.jpg', width: 3, height: 2 },\n    ];\n\n\n    return (\n      <div className=\"\">\n        <EncartBlanc\n          text1=\"See What’s NeWs\"\n          text2=\"Latests Photos\"\n          size = {1}\n        />\n        <div className=\"gallery-photo\">\n            <Gallery photos={photos}\n                     direction=\"column\"\n                     columns={4}\n                     onClick={this.openLightbox}\n            />\n            <Lightbox\n              images={photos}\n              onClose={this.closeLightbox}\n              onClickPrev={this.gotoPrevious}\n              onClickNext={this.gotoNext}\n              currentImage={this.state.currentImage}\n              isOpen={this.state.lightboxIsOpen}\n            />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    userId: null,\n    login: (token, userId, tokenExpiration) => {},\n    logout: () => {}\n});","import React, {Component} from 'react';\nimport './Auth.css';\nimport AuthContext from '../context/auth-context'\n\nclass AuthPage extends Component{\n    state = {\n        isLogin: true,\n    };\n\n    static contextType = AuthContext;\n\n\n    constructor(props){\n        super(props);\n        this.emailEl = React.createRef();\n        this.passwordEl = React.createRef();\n    }\n\n    switchModeHandler = () => {\n        this.setState( prevState =>{\n            return{\n                isLogin: !prevState.isLogin\n            };\n        })\n    }\n\n    submitHandler = event => {\n        event.preventDefault();\n        const email = this.emailEl.current.value;\n        const password = this.passwordEl.current.value;\n\n        if (email.trim() === 0 || password.trim()===0)\n        {\n            return;\n        }\n        console.log(email,password);\n\n        let requestBody = {\n            query: `\n                query {\n                    login(email: \"${email}\",password: \"${password}\"){\n                        userId\n                        token\n                        tokenExpiration\n                    }\n                }\n            `\n        };\n        if(!this.state.isLogin){\n            requestBody = {\n                query: `\n                mutation {\n                createUser(userInput:{email: \"${email}\",password: \"${password}\"})\n                {\n                _id\n                email\n                }\n                }`\n            };\n        }\n\n        fetch('http://localhost:8000/graphql',{\n          method: 'POST',\n          body: JSON.stringify(requestBody),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n                })\n            .then(resData =>{\n                if(resData.data.login.token){\n                    this.context.login(\n                        resData.data.login.token,\n                        resData.data.login.userId,\n                        resData.data.tokenExpiration);\n                }\n                console.log(resData);\n            })\n            .catch(err =>{\n            console.log(err)\n        });\n    }\n\n\n\n    render(){\n        return(\n            <div className=\"form-background_\">\n                <form className=\"auth-form_\" onSubmit={this.submitHandler}>\n                    <div className=\"form-control_\">\n                        <label htmlFor=\"email\">E-mail</label>\n                        <input type=\"email\" id=\"email\" ref={this.emailEl}/>\n                    </div>  <div className=\"form-control_\">\n                        <label htmlFor=\"password\">password</label>\n                        <input type=\"password\" id=\"password\" ref={this.passwordEl}/>\n                    </div>\n                    <div className=\"form-action_\">\n                        <button type=\"submit\" >Submit</button>\n                        <button type=\"button\" onClick={this.switchModeHandler}>Switch to {this.state.isLogin ? 'Sign Up' : 'Login' }</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default  AuthPage;","import React from 'react';\nimport './Spinner.css'\n\nconst spinner = () => (\n<div className=\"spinner\">\n    <div className=\"lds-default\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n</div>\n    );\n\n\nexport default spinner;","\n\nexport const helpers = {\n\n    monthToString: function( date){\n        const date2 = new Date (date);\n        const mlist = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n        return mlist[date2.getMonth()];\n    },\n\n    sortDate :function (array) {\n       return array.sort(function(a,b){\n            // Turn your strings into dates, and then subtract them\n            // to get a value that is either negative, positive, or zero.\n            return new Date(a.date) - new Date(b.date);\n        });\n    },\n\n\n\n}\n\nexport default helpers;\n\n","\n\n\nimport React from 'react'\nimport {helpers} from '../../../../helpers/date';\n\n\n\nconst EncartEventLs = (props) => (\n\n\n    <div className={props.index == 0 ? \"col-12 col-md-6 col-lg-12\" : \"col-12 col-md-6 {col-lg-6\"}>\n        <div className=\"single-event-area  mb-1\">\n\n            <div className=\"event-text\">\n                <div className=\"dateLeft\">\n                    <span className=\"dateLeft-dateJour\">{new Date(props.date).getDate()}</span><br/>\n                    {console.log(props.date)}\n                    <span className=\"dateLeft-dateJour2\">{helpers.monthToString(new Date(props.date))} {new Date(props.date).getFullYear()}</span><br/>\n\n                    <span className=\"dateLeft-dateJour2\">{props.nomBar}</span>\n                </div>\n                <h4>{props.nomEvenement}</h4>\n                {console.log(props.lienFb)}\n                <a target=\"_blank\"\n                   rel= \"noopener noreferrer\"\n                   href={props.lienFb}\n                   className={props.lienFb == '' ? \"btn see-more-btn Eventdisabled\" : \"btn see-more-btn \" }\n                >{props.lienFb == '' ? 'COMING SOON' : 'SEE EVENT' }</a>\n                {console.log(`props.eventId ${props.eventId}`)}\n\n\n\n            </div>\n        </div>\n    </div>\n\n\n)\n\n\nexport default EncartEventLs\n\n\n\n\n","import React from 'react';\nimport './EventList.css'\nimport EncartEventLs from \"./EncartEvent/EncartEventLs\";\nimport EncartBlanc from \"../../Encart/EncartBlanc\";\nimport {helpers} from \"../../../helpers/date\";\nconst moment = require('moment');\n\nconst eventListLs = props =>{\n\n    const pastEvent = props.events\n        .filter( event => moment(event.date).isBefore(moment().endOf(\"day\")))\n        .sort(function(a,b){\n            return moment(b.date).valueOf() - moment(a.date).valueOf();\n        })\n        .map((event,index) => {\n        return (\n            <EncartEventLs\n                date={event.date}\n                nomBar={event.barName}\n                nomEvenement={event.eventName}\n                lienFb={event.fbLink}\n                index={1}\n                key={event._id}\n                eventId = {event._id}\n            />\n        );\n    });\n    const futurEvent = props.events\n        .filter( event => moment(event.date).isAfter(moment().endOf(\"day\")))\n        .sort(function(a,b){\n        return moment(b.date).valueOf() - moment(a.date).valueOf();\n    })\n        .map((event,index) => {\n            return (\n                <EncartEventLs\n                    date={event.date}\n                    nomBar={event.barName}\n                    nomEvenement={event.eventName}\n                    lienFb={event.fbLink}\n                    index={index}\n                    key={event._id}\n                    eventId={event._id}\n                />\n            );\n            {\n                console.log('past Event', pastEvent);\n            }\n        });\n    return (\n        <ul className=\"event__list\">\n            <li>\n                <EncartBlanc\n                    text1=\"See what’s new\"\n                    text2=\"Latests SHOWS\"\n                />\n            </li>\n            <li>\n                <section className=\"displayBlock\">\n            {futurEvent}\n                </section>\n            </li>\n            <li>\n            <EncartBlanc\n                text1=\"See what’s new\"\n                text2=\"Past SHOWS\"\n            />\n            </li>\n            <li>\n                <section>\n            {pastEvent}\n                </section>\n            </li>\n        </ul>\n    );\n}\n\n\nexport default eventListLs;\n","\nimport React,{Component} from 'react';\nimport EncartBlanc from '../components/Encart/EncartBlanc';\nimport Footer from '../components/Footer/Footer';\nimport AuthContext from \"../context/auth-context\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport EventListLs from \"../components/Events/EventList/EventListLs\";\n\n\nclass Events extends Component {\n    state = {\n        creating:false,\n        events:[],\n        isLoading: false,\n        selectedEvent: null\n    };\n\n    constructor(props) {\n        super(props);\n        this.barNameElRef = React.createRef();\n        this.eventNameElRef = React.createRef();\n        this.dateElRef = React.createRef();\n        this.fbLinkElRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.fetchEvents();\n    }\n    static contextType = AuthContext;\n\n    fetchEvents = () => {\n        this.setState({isLoading: true})\n        const requestBody = {\n            query: `\n                query {\n                    events\n                    {\n                        _id\n                        barName\n                        eventName                        \n                        fbLink\n                        date\n                    }\n                }\n            `\n        };\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                const events = resData.data.events;\n                console.log(events)\n                this.setState({events: events, isLoading:false})\n            })\n            .catch(err =>{\n                console.log(err)\n                this.setState({isLoading:false})\n            });\n    };\n\n    onDeleteEvent =(eventId) => {\n\n        const requestBody = {\n            query: `\n                mutation {\n                    cancelEvent(eventId: \"${eventId}\")\n                    {\n                        _id\n\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(res =>{\n\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                console.log(resData);\n                this.setState( prevState =>{\n                    const updatedEvents = prevState.events.filter(event => {\n                        return event._id !== eventId;\n                    });\n                    console.table(updatedEvents);\n\n                    return{events: updatedEvents};\n                });\n\n\n            })\n            .catch(err =>{\n                console.log(err)\n            });\n    };\n\n\n    render() {\n        return (\n            <div className=\"slide-img bg-img\">\n                <section className=\"events-area \">\n\n                    <div className=\"container\">\n                        <div className=\"row\">\n\n                            {this.state.isLoading\n                                ?    <Spinner/>\n                                :   (\n                                    <EventListLs\n                                        events={this.state.events}\n                                        authUserId={this.context.userId}\n                                        />\n                                )\n                            }\n                        </div>\n\n                    </div>\n                </section>\n                <Footer/>\n            </div>\n\n\n        );\n    }\n}\n\n\n\n\nexport default Events;\n","import React from 'react';\n\nimport './Modal.css'\n\nconst modal = props => (\n    <div className=\"modal_\">\n        <header className=\"modal__header_\">\n            <h1> {props.title}</h1>\n        </header>\n        <section className=\"modal__content_\">\n            {props.children}\n        </section>\n        <section className=\"modal__actions_\">\n            {props.canCancel && <button className=\"btn_\" onClick={props.onCancel}>Cancel</button>}\n            {props.canConfirm && <button className=\"btn_\" onClick={props.onConfirm}>{props.confirmText}</button>}\n\n        </section>\n    </div>\n);\n\nexport default modal;","import React from 'react'\nimport {helpers} from '../../../../helpers/date';\n\nconst EncartEvent = (props) => (\n\n<div className={props.index === 0 ? \"col-12 col-md-6 col-lg-12\" : \"col-12 col-md-6 col-lg-6\"}>\n    <div className=\"single-event-area  mb-1\">\n\n        <div className=\"event-text\">\n            <div className=\"dateLeft\">\n                <span className=\"dateLeft-dateJour\">{new Date(props.date).getDate()}</span><br/>\n                {console.log(props.date)}\n                <span className=\"dateLeft-dateJour2\">{helpers.monthToString(new Date(props.date))} {new Date(props.date).getFullYear()}</span><br/>\n\n                <span className=\"dateLeft-dateJour2\">{props.nomBar}</span>\n            </div>\n            <h4>{props.nomEvenement}</h4>\n            {console.log(props.lienFb)}\n            <a target=\"_blank\"\n               rel= \"noopener noreferrer\"\n               href={props.lienFb}\n               className={props.lienFb === '' ? \"btn see-more-btn Eventdisabled\" : \"btn see-more-btn \" }\n            >{props.lienFb === '' ? 'COMING SOON' : 'SEE EVENT' }</a>\n            {console.log(`props.eventId ${props.eventId}`)}\n            <button onClick={props.deleteThisEvent.bind(this, props.eventId)}>X</button>\n\n\n        </div>\n    </div>\n</div>\n)\n\n\nexport default EncartEvent\n\n\n\n\n","import React from 'react';\nimport './EventList.css'\nimport EncartEvent from \"./EncartEvent/EncartEvent\";\n\nconst eventList = props =>{\n\n    const events = props.events.map((event,index) => {\n        return (\n\n            <EncartEvent\n                date={event.date}\n                nomBar={event.barName}\n                nomEvenement={event.eventName}\n                lienFb={event.fbLink}\n                index={index}\n                key={event._id}\n                eventId = {event._id}\n                deleteThisEvent = {props.onDeleteEvent}\n                />\n                );\n        });\n\n    return (\n        <ul className=\"event__list\">\n            {events}\n        </ul>\n    );\n}\n\n\nexport default eventList;\n\n","import React, {Component} from 'react';\nimport Modal from '../components/Modal/Modal'\nimport Backdrop from '../components/Backdrop/Backdrop'\nimport './Events.css'\nimport AuthContext from '../context/auth-context'\nimport EventList from '../components/Events/EventList/EventList'\nimport Spinner from '../components/Spinner/Spinner'\nimport {helpers} from '../helpers/date';\n\nclass EventPage extends Component{\n\n    state = {\n        creating:false,\n        events:[],\n        isLoading: false,\n        selectedEvent: null\n    };\n    static contextType = AuthContext;\n    constructor(props) {\n        super(props);\n        this.barNameElRef = React.createRef();\n        this.eventNameElRef = React.createRef();\n        this.dateElRef = React.createRef();\n        this.fbLinkElRef = React.createRef();\n    }\n    componentDidMount() {\n        this.fetchEvents();\n    }\n    startCreateEventHandler = () =>{\n        this.setState({creating:true});\n    };\n    modalConfirmHandler = () =>{\n        this.setState({creating:false});\n        const barName = this.barNameElRef.current.value;\n        const date = this.dateElRef.current.value;\n        const eventName = this.eventNameElRef.current.value;\n        const fbLink = this.fbLinkElRef.current.value;\n\n        if(barName.trim().length === 0 ||\n            date.trim().length === 0 ||\n            eventName.trim().length === 0 ||\n            fbLink.trim().length === 0 ){\n            return;\n        }\n\n        const event = {barName, eventName, date, fbLink};\n\n\n        const requestBody = {\n            query: `\n                mutation {\n                    createEvent(eventInput:{ barName: \"${barName}\",eventName: \"${eventName}\",fbLink: \"${fbLink}\",date: \"${date}\"})\n                    {\n                        _id\n                        barName\n                        eventName\n                        fbLink\n                        date\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n\n               this.setState( prevState =>{\n                  const updatedEvents =[...prevState.events];\n                  updatedEvents.push({\n                       _id : resData.data.createEvent._id,\n                      barName : resData.data.createEvent.barName,\n                      eventName: resData.data.createEvent.eventName,\n                      date : resData.data.createEvent.date,\n                      fbLink: resData.data.createEvent.fbLink,\n                   });\n                   return{events: updatedEvents};\n               });\n            })\n            .catch(err =>{\n                console.log(err)\n            });\n    };\n    modalCancelHandler = () =>{\n        this.setState({creating:false, selectedEvent: null});\n    };\n    fetchEvents = () => {\n        this.setState({isLoading: true})\n        const requestBody = {\n            query: `\n                query {\n                    events\n                    {\n                        _id\n                        barName\n                        eventName                        \n                        fbLink\n                        date\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                const events = resData.data.events;\n                console.table(events);\n                helpers.sortDate(events);\n                console.table(events);\n                this.setState({events: events, isLoading:false})\n            })\n            .catch(err =>{\n                console.log(err)\n                this.setState({isLoading:false})\n            });\n    };\n    onDeleteEvent =(eventId) => {\n\n       const requestBody = {\n            query: `\n                mutation {\n                    cancelEvent(eventId: \"${eventId}\")\n                    {\n                        _id\n\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(res =>{\n\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                console.log(resData);\n                this.setState( prevState =>{\n                    const updatedEvents = prevState.events.filter(event => {\n                        return event._id !== eventId;\n                    });\n                    console.table(updatedEvents);\n\n                    return{events: updatedEvents};\n                });\n\n\n            })\n            .catch(err =>{\n                console.log(err)\n            });\n    };\n\n    render(){\n        return(\n            <React.Fragment>\n                {this.state.creating &&  (\n                    <Modal\n                        title=\"Add Event\"\n                        canConfirm\n                        canCancel\n                        onCancel={this.modalCancelHandler}\n                        onConfirm={this.modalConfirmHandler}\n                        confirmText=\"Confirm\">\n                        <form>\n                            <div className=\"form-control_\">\n                                <label htmlFor=\"barName\">nom du bar</label>\n                                <input type=\"text\" id=\"barName\" ref={this.barNameElRef}/>\n                            </div>\n                            <div className=\"form-control_\">\n                                <label htmlFor=\"eventName\">nom de l'évenement</label>\n                                <input type=\"text\" id=\"eventName\" ref={this.eventNameElRef} />\n                            </div>\n                            <div className=\"form-control_\">\n                                <label htmlFor=\"date\">Date</label>\n                                <input type=\"date\" id=\"date\" ref={this.dateElRef}/>\n                            </div>\n                            <div className=\"form-control_\">\n                                <label htmlFor=\"fbLink\">lien facebook</label>\n                                <input type=\"text\" id=\"fbLink\" ref={this.fbLinkElRef} />\n                            </div>\n                        </form>\n                    </Modal>\n                )}\n                {this.context.token &&\n                    (<div className=\"events-control_\">\n                        <p> Share your own event </p>\n                        <button className=\"btn_\"\n                                onClick={this.startCreateEventHandler}> Create Event\n                        </button>\n                    </div>)\n                }\n                {this.state.isLoading\n                    ?    <Spinner/>\n                    :   (\n                        <EventList\n                        events={this.state.events}\n                        authUserId={this.context.userId}\n                        onDeleteEvent = {this.onDeleteEvent}/>\n                        )\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default  EventPage;","import React, {Fragment} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport AuthContext from '../../context/auth-context';\nimport './MainNavigation.css';\n\nconst mainNavigation = props =>(\n    <AuthContext.Consumer>\n        {   (context) => {\n               return (\n                   <header className=\"main-navigation\">\n                       <div className=\"main_navigation__logo\">\n                           <h1>The Navbar</h1>\n                       </div>\n                       <nav className=\"main-navigation__items\">\n                           <ul>\n                               <li>\n                                   <NavLink to=\"/eventpage\">Events</NavLink>\n                               </li>\n                               <li>\n                                   <NavLink to=\"/contactPage\">Bookings</NavLink>\n                               </li>\n                               <li>\n                                   <NavLink to=\"/youtubePage\">Youtube</NavLink>\n                               </li>\n                               <li>\n                                   <button onClick={context.logout}>Logout</button>\n                               </li>\n                           </ul>\n                       </nav>\n                   </header>\n               );\n            }\n        }\n    </AuthContext.Consumer>\n);\n\nexport default mainNavigation;","import React from 'react'\n\nconst EncartContact = (props) => (\n\n<div className=\"col-12 col-md-6 col-lg-12\">\n    <div className=\"single-event-area  mb-1\">\n\n        <div className=\"event-text\">\n            <p>nom :{props.nom}</p>\n            <p>mail :{props.mail}</p>\n            <p>tel: {props.phoneContact}</p>\n            <p>message: {props.message}</p>\n            <button onClick={props.onDeleteContact.bind(this, props.contactMessageId)}>X</button>\n        </div>\n    </div>\n</div>\n)\n\nexport default EncartContact\n\n\n\n","import React from 'react';\nimport EncartContact from \"./EncartContact\";\nimport '../Events/EventList/EventList.css'\n\nconst ContactList = props =>{\n\n    const contacts = props.contacts.map((contactMessage,index) => {\n        return (\n\n            <EncartContact\n                nom={contactMessage.nom}\n                mail={contactMessage.mail}\n                phoneContact={contactMessage.phoneContact}\n                message={contactMessage.message}\n                index={index}\n                key={contactMessage._id}\n                contactMessageId = {contactMessage._id}\n                onDeleteContact={props.onDeleteContact}\n                />\n                );\n        });\n\n    return (\n        <ul className=\"contactMessage__list\">\n            {contacts}\n        </ul>\n    );\n}\n\n\nexport default ContactList;\n\n","\nimport React,{Component} from 'react';\nimport EncartBlanc from '../components/Encart/EncartBlanc';\nimport Footer from '../components/Footer/Footer';\nimport AuthContext from \"../context/auth-context\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport ContactList from \"../components/Contact/ContactList\";\nimport EventList from \"../components/Events/EventList/EventList\";\n\n\n\nclass Contacts extends Component {\n\n    state = {\n        creating:false,\n        contactsMessages:[],\n        isLoading: true,\n        selectedEvent: null\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.fetchContacts();\n        console.log('fetch terminé');\n    }\n    static contextType = AuthContext;\n\n    fetchContacts = () => {\n        this.setState({isLoading: true})\n        const requestBody = {\n            query: `\n                query {\n                    contactsMessages\n                    {\n                        _id \n                        nom\n                        mail\n                        message\n                        date\n                    }\n                }\n            `\n        };\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                const contactsMessages = resData.data.contactsMessages;\n                console.table('constact message Fetched ', contactsMessages)\n                this.setState({contactsMessages: contactsMessages, isLoading:false})\n            })\n            .catch(err =>{\n                console.log(err)\n                this.setState({isLoading:false})\n            });\n    };\n\n    deleteContact =(messageId) => {\n\n        const requestBody = {\n            query: `\n                mutation {\n                    cancelMessage(messageId: \"${messageId}\")\n                    {\n                        _id\n\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                console.log(resData);\n                this.setState( prevState =>{\n                    const updatedMessages = prevState.contactsMessages.filter(contactsMessage => {\n                        return contactsMessage._id !== messageId;\n                    });\n                    console.table(updatedMessages);\n                    return{contactsMessages: updatedMessages};\n                });\n            })\n            .catch(err =>{\n                console.log(err)\n            });\n    };\n\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.isLoading\n                    ?    <Spinner/>\n                    :   <ContactList\n                            contacts={this.state.contactsMessages}\n                            onDeleteContact = {this.deleteContact}/>\n\n                }\n            </React.Fragment>\n        );\n    }\n}\n\n\n\n\nexport default Contacts;\n","import React from 'react'\n\nconst EncartYoutube = (props) => (\n\n<div className= \"col-12 col-md-6 col-lg-12\">\n    <div className=\"single-event-area  mb-1\">\n        <div className=\"event-text\">\n            <p>link : {props.link}</p>\n            <button onClick={props.deleteThisLink.bind(this, props.youtubeLinkId)}>X</button>\n        </div>\n    </div>\n</div>\n)\n\nexport default EncartYoutube\n\n\n\n\n","import React from 'react';\nimport '../CSS/YoutubeList.css'\nimport EncartYoutube from \"./EncartYoutube/EncartYoutube\";\n\nconst YoutubeList = props =>{\n\n    const youtubeLinks = props.youtubeLinks.map((youtubeLink) => {\n        return (\n            <EncartYoutube\n                link={youtubeLink.link}\n                key={youtubeLink._id}\n                youtubeLinkId = {youtubeLink._id}\n                deleteThisLink = {props.onDeleteYoutubeLink}\n                />\n                );\n        });\n\n    return (\n        <ul className=\"youtubeLink__list\">\n            {youtubeLinks}\n        </ul>\n);\n};\n\nexport default YoutubeList;\n\n","import React, {Component} from 'react';\nimport Modal from '../components/Modal/Modal';\nimport './CreationEvenement.css';\nimport AuthContext from '../context/auth-context';\nimport Spinner from '../components/Spinner/Spinner';\nimport YoutubeList from \"../components/Youtube/YoutubeList\";\n\nclass YoutubeLinkPage extends Component{\n    state = {\n        creating:false,\n        youtubeLinks:[],\n        isLoading: false,\n        selectedYoutubeLink: null\n    };\n\n    static contextType = AuthContext;\n\n    constructor(props) {\n        super(props);\n        this.linkElRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.fetchYoutubeLinks();\n    }\n\n    startCreateYoutubeLinkHandler = () =>{\n        this.setState({creating:true});\n    };\n\n    modalConfirmHandler = () =>{\n        this.setState({creating:false});\n        const link = this.linkElRef.current.value;\n        const youtubeLink = {link};\n        console.log(youtubeLink);\n        const requestBody = {\n            query: `\n                mutation {\n                    createYoutubeLink(youtubeLinkInput:{ link: \"${link}\"})\n                    {\n                        _id\n                        link\n                       \n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n        console.log(`token = ${token}`)\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n\n                this.setState( prevState =>{\n                    const updatedYoutubeLink =[...prevState.youtubeLinks];\n                    updatedYoutubeLink.push({\n                        _id : resData.data.createYoutubeLink._id,\n                        link : resData.data.createYoutubeLink.link\n                    });\n                    return{youtubeLinks: updatedYoutubeLink};\n                });\n            })\n            .catch(err =>{\n                console.log(err)\n            });\n    };\n\n    modalCancelHandler = () =>{\n        this.setState({creating:false, selectedYoutubeLink: null});\n    };\n\n    fetchYoutubeLinks = () => {\n        this.setState({isLoading: true})\n        const requestBody = {\n            query: `\n                query {\n                    youtubeLinks\n                    {\n                        _id\n                        link\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n        console.log(`token = ${token}`)\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                const youtubeLinks = resData.data.youtubeLinks;\n                this.setState({youtubeLinks: youtubeLinks, isLoading:false})\n            })\n            .catch(err =>{\n                console.log(err)\n                this.setState({isLoading:false})\n            });\n    };\n\n    onDeleteYoutubeLink =(youtubeLinkId) => {\n\n        const requestBody = {\n            query: `\n                mutation {\n                    cancelYoutubeLink(youtubeLinkId: \"${youtubeLinkId}\")\n                    {\n                        _id\n\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                console.log(resData);\n                this.setState( prevState =>{\n                    const updatedYoutubeLinks= prevState.youtubeLinks.filter(youtubeLink => {\n                        return youtubeLink._id !== youtubeLinkId;\n                    });\n                    console.table(updatedYoutubeLinks);\n                    return{youtubeLinks: updatedYoutubeLinks};\n                });\n            })\n            .catch(err =>{\n                console.log(err)\n            });\n    };\n\n    render(){\n\n        return(\n            <React.Fragment>\n                {this.state.creating &&  (\n                    <Modal\n                        title=\"Add Event\"\n                        canConfirm\n                        canCancel\n                        onCancel={this.modalCancelHandler}\n                        onConfirm={this.modalConfirmHandler}\n                        confirmText=\"Confirm\">\n                        <form>\n                            <div className=\"form-control\">\n                                <label htmlFor=\"title\">Link</label>\n                                <input type=\"text\" id=\"title\" ref={this.linkElRef}/>\n                            </div>\n                        </form>\n                    </Modal>\n                )}\n                {this.context.token &&\n                    (<div className=\"events-control form-action_\">\n                    <p> Liste de vidéos youtube </p>\n                    <button className=\"btn\" onClick={this.startCreateYoutubeLinkHandler} > Create Videos</button>\n                    </div>)\n                }\n                {this.state.isLoading\n                    ?    <Spinner/>\n                    :   (<YoutubeList\n                        youtubeLinks={this.state.youtubeLinks}\n                        authUserId={this.context.userId}\n                        onDeleteYoutubeLink = {this.onDeleteYoutubeLink}/>)\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default  YoutubeLinkPage;","import React from 'react'\nimport YouTube from \"react-youtube\";\n\nconst EncartYoutubeLs = (props) => (\n\n    <div className=\"youtube-centered\">\n        <YouTube\n            videoId={props.link}\n        />\n    </div>\n)\n\nexport default EncartYoutubeLs\n\n\n\n\n","import React from 'react';\nimport '../CSS/YoutubeList.css'\nimport EncartYoutube from \"./EncartYoutube/EncartYoutube\";\nimport EncartYoutubeLs from \"./EncartYoutube/EncartYoutubeLs\";\n\nconst YoutubeList = props =>{\n\n    const youtubeLinks = props.youtubeLinks.map((youtubeLink,index) => {\n        return (\n            <EncartYoutubeLs\n                link={youtubeLink.link}\n                />\n                );\n        });\n    return (\n        <ul className=\"sa\">\n            {youtubeLinks}\n        </ul>\n    );\n};\n\nexport default YoutubeList;\n\n","import React, {Component} from 'react';\n\nimport Modal from '../components/Modal/Modal'\nimport Backdrop from '../components/Backdrop/Backdrop'\nimport './CreationEvenement.css'\nimport AuthContext from '../context/auth-context'\nimport Spinner from '../components/Spinner/Spinner'\nimport YoutubeList from \"../components/Youtube/YoutubeList\";\nimport EncartBlanc from \"../components/Encart/EncartBlanc\";\nimport YouTube from \"react-youtube\";\nimport Footer from \"../components/Footer/Footer\";\nimport YoutubeListLs from \"../components/Youtube/YoutubeListLs\";\n\nclass DisplayYoutubeLink extends Component{\n    state = {\n        creating:false,\n        youtubeLinks:[],\n        isLoading: false,\n        selectedYoutubeLink: null\n    };\n\n    static contextType = AuthContext;\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.fetchYoutubeLinks();\n    }\n\n    fetchYoutubeLinks = () => {\n        this.setState({isLoading: true})\n        const requestBody = {\n            query: `\n                query {\n                    youtubeLinks\n                    {\n                        _id\n                        link\n                    }\n                }\n            `\n        };\n\n        const token = this.context.token;\n        console.log(`token = ${token}`)\n\n        fetch('http://localhost:8000/graphql',{\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n\n            }\n        })\n            .then(res =>{\n                if(res.status !== 200 && res.status !== 201){\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData =>{\n                const youtubeLinks = resData.data.youtubeLinks;\n                this.setState({youtubeLinks: youtubeLinks, isLoading:false})\n            })\n            .catch(err =>{\n                console.log(err)\n                this.setState({isLoading:false})\n            });\n    };\n\n    render(){\n        return(\n            <React.Fragment>\n                <div className=\"slide-img bg-img\"   >\n                    <EncartBlanc text1 = {'See What NeWs'}\n                                 text2 = {'Latests Videos'}\n                                 size = {1}\n                    />\n                    <div className=\"background-grey\">\n                        {this.state.isLoading\n                            ?    <Spinner/>\n                            :   <YoutubeListLs\n                                youtubeLinks={this.state.youtubeLinks}\n                                />\n                        }\n                    </div>\n                </div>\n                <Footer/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default  DisplayYoutubeLink;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Contact from './pages/Contact';\nimport Accueil from './pages/Accueil';\nimport GalleryPhoto from './pages/GalleryPhoto';\nimport AuthPage from './pages/Auth';\nimport Events from './pages/Events';\nimport EventPage from './pages/Event';\nimport MainNavigation from './components/Navigation/MainNavigation';\nimport AuthContext from './context/auth-context';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport { BrowserRouter as Router, Route,Redirect,Switch } from 'react-router-dom';\nimport Contacts from \"./pages/Contacts\";\nimport YoutubeLinkPage from \"./pages/CreationYoutubeLink\";\nimport DisplayYoutubeLink from \"./pages/DisplayYoutubeLink\";\n\nclass App extends Component {\n\n  state = {\n    token:null,\n    userId:null\n  };\n\n  login =(token,userId,tokenExpiration) =>{\n    this.setState({\n      token: token,\n      userId: userId,\n      tokenExpiration:tokenExpiration\n    });\n  };\n\n  logout =() =>{\n    this.setState({\n      token: null,\n      userId: null\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"baron\">\n          <AuthContext.Provider value={{token: this.state.token,userId: this.state.userId, login: this.login, logout: this.logout}}>\n          {this.state.token ? <MainNavigation/> : <Header />}\n          <Switch>\n          <Route exact path=\"/react-baron\" component={Accueil} />\n          <Route path=\"/Mp3\" component={DisplayYoutubeLink} />\n          <Route path=\"/GalleryPhoto\" component={GalleryPhoto} />\n          <Route path=\"/Events\" component={Events} />\n          {!this.state.token && <Route path=\"/auth\" component={AuthPage} />}\n          {this.state.token && <Route path=\"/eventpage\" component={EventPage} />}\n          {this.state.token && <Route path=\"/youtubePage\" component={YoutubeLinkPage} />}\n          {this.state.token && <Redirect path=\"/auth\"  to=\"/eventpage\" exact />}\n          {this.state.token && (<Route path=\"/contactPage\" component={Contacts} />)}\n          <Route path=\"/Contact\" component={Contact} />\n          </Switch>\n          </AuthContext.Provider>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('baronCrane'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}